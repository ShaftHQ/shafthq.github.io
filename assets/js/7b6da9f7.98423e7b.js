"use strict";(self.webpackChunkshaft_user_guide=self.webpackChunkshaft_user_guide||[]).push([[2817],{2052:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"Keywords/GUI/Element_Validations","title":"Element Validations","description":"Difference between assertThat() and verifyThat():","source":"@site/docs/Keywords/GUI/Element_Validations.md","sourceDirName":"Keywords/GUI","slug":"/Keywords/GUI/Element_Validations","permalink":"/docs/Keywords/GUI/Element_Validations","draft":false,"unlisted":false,"editUrl":"https://github.com/ShaftHQ/shafthq.github.io/blob/master/docs/Keywords/GUI/Element_Validations.md","tags":[],"version":"current","frontMatter":{"id":"Element_Validations","title":"Element Validations","sidebar_label":"Element Validations"},"sidebar":"docs","previous":{"title":"Element","permalink":"/docs/Keywords/GUI/Element_Actions"},"next":{"title":"Touch","permalink":"/docs/Keywords/GUI/Touch_Actions"}}');var n=i(4848),r=i(8453);const a={id:"Element_Validations",title:"Element Validations",sidebar_label:"Element Validations"},l=void 0,d={},o=[{value:"Difference between assertThat() and verifyThat():",id:"difference-between-assertthat-and-verifythat",level:2},{value:"Text Validations",id:"text-validations",level:3},{value:"text().isEqualTo()",id:"textisequalto",level:4},{value:"text().equalsIgnoringCaseSensitivity()",id:"textequalsignoringcasesensitivity",level:4},{value:"textTrimmed()",id:"texttrimmed",level:4},{value:"Element Existence",id:"element-existence",level:3},{value:"exists()",id:"exists",level:4},{value:"doesNotExist()",id:"doesnotexist",level:4},{value:"Element States",id:"element-states",level:3},{value:"isChecked()",id:"ischecked",level:4},{value:"isNotChecked()",id:"isnotchecked",level:4},{value:"isDisabled()",id:"isdisabled",level:4},{value:"isEnabled()",id:"isenabled",level:4},{value:"isVisible()",id:"isvisible",level:4},{value:"isHidden()",id:"ishidden",level:4},{value:"isSelected()",id:"isselected",level:4},{value:"isNotSelected()",id:"isnotselected",level:4},{value:"Attributes Validations",id:"attributes-validations",level:3},{value:"attribute()",id:"attribute",level:4}];function c(e){const t={code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"difference-between-assertthat-and-verifythat",children:"Difference between assertThat() and verifyThat():"}),"\n",(0,n.jsx)(t.p,{children:"Assertions and Verification testing are important components in GUI automation testing. Each one them performs a specific role:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["In ",(0,n.jsx)(t.strong,{children:"Assertions"}),", if the assert is not met, TC execution will be ",(0,n.jsx)(t.strong,{children:"aborted"})," and the rest of the of TCs will be skipped and the TC execution result will be ",(0,n.jsx)(t.strong,{children:"failed"}),". Assertions are used as checkpoints for testing or validating business-critical transactions. This type of assertiosn is called ",(0,n.jsx)(t.strong,{children:"Hard Assertion"})]}),"\n",(0,n.jsxs)(t.li,{children:["In ",(0,n.jsx)(t.strong,{children:"Verifications"}),", even if ther verifications is not met, TC execution will continue to run until the last test is executed. The errors that may be found will be reported the end of the test suite. This type of verification is called ",(0,n.jsx)(t.strong,{children:"Soft Assertion"})]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"text-validations",children:"Text Validations"}),"\n",(0,n.jsx)(t.h4,{id:"textisequalto",children:"text().isEqualTo()"}),"\n",(0,n.jsx)(t.p,{children:"validates the text of the element exactly as the expected"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:'driver.element().assertThat(elementLocator).text().isEqualTo("Expected Text").perform();\ndriver.element().verifyThat(elementLocator).text().isEqualTo("Expected Text").perform();\n'})}),"\n",(0,n.jsx)(t.h4,{id:"textequalsignoringcasesensitivity",children:"text().equalsIgnoringCaseSensitivity()"}),"\n",(0,n.jsx)(t.p,{children:"validates the text of the elementsame as expected  without considerating letters are capital or small ."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:'driver.element().assertThat(elementLocator).text().equalsIgnoringCaseSensitivity("Expected Text").perform();\ndriver.element().verifyThat(elementLocator).text().equalsIgnoringCaseSensitivity("Expected Text").perform();\n'})}),"\n",(0,n.jsx)(t.h4,{id:"texttrimmed",children:"textTrimmed()"}),"\n",(0,n.jsxs)(t.p,{children:["validates against the provided elements text attribute after it's trimmed (all leading and trailing ",(0,n.jsx)(t.strong,{children:"space"})," removed)"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:'driver.element().assertThat(elementLocator).textTrimmed().equalsIgnoringCaseSensitivity("Expected Text").perform();\ndriver.element().verifyThat(elementLocator).textTrimmed().equalsIgnoringCaseSensitivity("Expected Text").perform();\n'})}),"\n",(0,n.jsx)(t.h3,{id:"element-existence",children:"Element Existence"}),"\n",(0,n.jsx)(t.h4,{id:"exists",children:"exists()"}),"\n",(0,n.jsx)(t.p,{children:"Use this to check that the target element exists"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:"driver.element().assertThat(elementLocator).exists().perform();\ndriver.element().verifyThat(elementLocator).exists().perform();\n"})}),"\n",(0,n.jsx)(t.h4,{id:"doesnotexist",children:"doesNotExist()"}),"\n",(0,n.jsx)(t.p,{children:"Use this to check that the target element does not exist"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:"driver.element().assertThat(elementLocator).doesNotExist().perform();\ndriver.element().verifyThat(elementLocator).doesNotExist().perform();\n"})}),"\n",(0,n.jsx)(t.h3,{id:"element-states",children:"Element States"}),"\n",(0,n.jsx)(t.h4,{id:"ischecked",children:"isChecked()"}),"\n",(0,n.jsx)(t.p,{children:"Use this to check against the provided elements checked attribute"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:"driver.element().assertThat(elementLocator).isChecked().perform();\ndriver.element().verifyThat(elementLocator).isChecked().perform();\n"})}),"\n",(0,n.jsx)(t.h4,{id:"isnotchecked",children:"isNotChecked()"}),"\n",(0,n.jsx)(t.p,{children:"Use this to check against the provided elements checked attribute"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:"driver.element().assertThat(elementLocator).isNotChecked().perform();\ndriver.element().verifyThat(elementLocator).isNotChecked().perform();\n"})}),"\n",(0,n.jsx)(t.h4,{id:"isdisabled",children:"isDisabled()"}),"\n",(0,n.jsx)(t.p,{children:"Use this to check against the provided elements disabled attribute"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:"driver.element().assertThat(elementLocator).isDisabled().perform();\ndriver.element().verifyThat(elementLocator).isDisabled().perform();\n"})}),"\n",(0,n.jsx)(t.h4,{id:"isenabled",children:"isEnabled()"}),"\n",(0,n.jsx)(t.p,{children:"Use this to check against the provided elements disabled attribute"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:"driver.element().assertThat(elementLocator).isEnabled().perform();\ndriver.element().verifyThat(elementLocator).isEnabled().perform();\n"})}),"\n",(0,n.jsx)(t.h4,{id:"isvisible",children:"isVisible()"}),"\n",(0,n.jsx)(t.p,{children:"Use this to check against the provided elements hidden attribute"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:"driver.element().assertThat(elementLocator).isVisible().perform();\ndriver.element().verifyThat(elementLocator).isVisible().perform();\n"})}),"\n",(0,n.jsx)(t.h4,{id:"ishidden",children:"isHidden()"}),"\n",(0,n.jsx)(t.p,{children:"Use this to check against the provided elements hidden attribute"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:"driver.element().assertThat(elementLocator).isHidden().perform();\ndriver.element().verifyThat(elementLocator).isHidden().perform();\n"})}),"\n",(0,n.jsx)(t.h4,{id:"isselected",children:"isSelected()"}),"\n",(0,n.jsx)(t.p,{children:"Use this to check against the provided elements selected attribute"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:"driver.element().assertThat(elementLocator).isSelected().perform();\ndriver.element().verifyThat(elementLocator).isSelected().perform();\n"})}),"\n",(0,n.jsx)(t.h4,{id:"isnotselected",children:"isNotSelected()"}),"\n",(0,n.jsx)(t.p,{children:"Use this to check against the provided elements selected attribute"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:"driver.element().assertThat(elementLocator).isNotSelected().perform();\ndriver.element().verifyThat(elementLocator).isNotSelected().perform();\n"})}),"\n",(0,n.jsx)(t.h3,{id:"attributes-validations",children:"Attributes Validations"}),"\n",(0,n.jsx)(t.h4,{id:"attribute",children:"attribute()"}),"\n",(0,n.jsx)(t.p,{children:"Use this to check against a certain element attribute"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:'driver.element().assertThat(elementLocator).attribute("name").isEqualTo("expected value").perform();\ndriver.element().verifyThat(elementLocator).attribute("name").isEqualTo("expected value").perform();\n'})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>l});var s=i(6540);const n={},r=s.createContext(n);function a(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);