"use strict";(self.webpackChunkshaft_user_guide=self.webpackChunkshaft_user_guide||[]).push([[1340],{207:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"Demos/web","title":"Demo Projects For Web GUI","description":"Parallel Execution using ThreadLocal Driver","source":"@site/docs/Demos/web.md","sourceDirName":"Demos","slug":"/Demos/web","permalink":"/docs/Demos/web","draft":false,"unlisted":false,"editUrl":"https://github.com/ShaftHQ/shafthq.github.io/blob/master/docs/Demos/web.md","tags":[],"version":"current","frontMatter":{"id":"web","title":"Demo Projects For Web GUI","sidebar_label":"Web"},"sidebar":"docs","previous":{"title":"List","permalink":"/docs/Properties/PropertiesList"},"next":{"title":"Mobile","permalink":"/docs/Demos/mobile"}}');var o=n(4848),r=n(8453);const i={id:"web",title:"Demo Projects For Web GUI",sidebar_label:"Web"},s=void 0,l={},c=[{value:"Parallel Execution using ThreadLocal Driver",id:"parallel-execution-using-threadlocal-driver",level:3},{value:"ParallelExecution_Demo",id:"parallelexecution_demo",level:3}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h3,{id:"parallel-execution-using-threadlocal-driver",children:"Parallel Execution using ThreadLocal Driver"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",metastring:'title="ParallelThreadLocalSampleTest"',children:'public class ParallelThreadLocalTest {\n    private ThreadLocal<SHAFT.GUI.WebDriver> driver = new ThreadLocal<>();\n    private SHAFT.TestData.JSON testData;\n\n    @Test\n    public void signOutTest() {\n        new HomePage(driver.get())\n                .signOut()\n                .verifyUserIsSingedOut(testData.getTestData("signOutText"));\n    }\n\n    @Test\n    public void buttonClickTest() {\n        new HomePage(driver.get())\n                .clickMe()\n                .verifyButtonIsClicked(testData.getTestData("buttonClickedText"));\n    }\n\n    @BeforeClass\n    public void beforeClassSetup() {\n        testData = new SHAFT.TestData.JSON("TestData.json");\n    }\n\n    @BeforeMethod\n    public void beforeMethodSetUp() {\n        driver.set(new SHAFT.GUI.WebDriver());\n        driver.get().browser().navigateToURL(SHAFT.Properties.paths.testData() + "loginPage.html");\n        new LoginPage(driver.get())\n                .login(testData.getTestData("email"),\n                        testData.getTestData("password"));\n        new HomePage(driver.get())\n                .verifyUserIsOnHomePage(testData.getTestData("welcomeMessageText"));\n\n\n    }\n\n    @AfterMethod\n    public void afterMethodTearDown() {\n        driver.get().quit();\n    }\n}\n'})}),"\n",(0,o.jsxs)(t.admonition,{type:"info",children:[(0,o.jsx)(t.p,{children:"You can visit this Repository to for a Demo on how to set Parallel Execution in SHAFT_ENGINE"}),(0,o.jsx)(t.h3,{id:"parallelexecution_demo",children:(0,o.jsx)(t.a,{href:"https://github.com/MustafaAgamy/ShaftEngine-ParellelWithThreadLocal.git",children:"ParallelExecution_Demo"})})]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var a=n(6540);const o={},r=a.createContext(o);function i(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);